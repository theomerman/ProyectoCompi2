
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADD ALTER AND AT BASE CAST COLUMN COMMA COMPARE CONCATENA CONTAR CREATE DATA DATE DECIMAL DECIMALES DIFFERENT DIVIDE DROP EQUAL FROM GREATER GREATER_EQUAL HOY ID INSERT INT INTO KEY LESS LESS_EQUAL LPAREN MINUS NOT NOT_EQUAL NOT_SYMBOL NULL NUMBER NVARCHAR OR PERIOD PLUS PRIMARY REFERENCE RPAREN SELECT SEMICOLON STRING SUBSTRAER SUMA TABLE TIMES USE VALUES WHEREinit : statement init\n            | statement\n            statement : create_database\n                | use_database\n                | create_table\n                | insert_into\n                | alter_table\n                create_database : CREATE DATA BASE ID SEMICOLONuse_database : USE ID SEMICOLON\n    create_table : CREATE TABLE ID LPAREN columns RPAREN SEMICOLON\n\n    \n    columns : columns COMMA column\n            | column\n    \n    column : ID type attributes\n    \n    type : INT\n         | DATE\n         | NVARCHAR LPAREN NUMBER RPAREN\n         | DECIMAL\n    \n    attributes : attributes attribute\n               | attribute\n               | empty\n    \n    attribute : PRIMARY KEY\n              | REFERENCE ID LPAREN ID RPAREN\n              | NOT NULL\n    \n    insert_into : INSERT INTO ID LPAREN ids RPAREN VALUES LPAREN primitives RPAREN SEMICOLON\n    \n    ids : ids COMMA ID\n        | ID\n    \n    primitives  : primitives COMMA primitive\n                | primitive\n    \n    primitive   : NUMBER\n                | DECIMALES\n                | STRING\n    \n    alter_table : ALTER TABLE ID ADD COLUMN ID type SEMICOLON\n                | ALTER TABLE ID DROP COLUMN ID SEMICOLON\n    empty :'
    
_lr_action_items = {'CREATE':([0,2,3,4,5,6,7,20,28,54,59,66,78,],[8,8,-3,-4,-5,-6,-7,-9,-8,-10,-33,-32,-24,]),'USE':([0,2,3,4,5,6,7,20,28,54,59,66,78,],[9,9,-3,-4,-5,-6,-7,-9,-8,-10,-33,-32,-24,]),'INSERT':([0,2,3,4,5,6,7,20,28,54,59,66,78,],[10,10,-3,-4,-5,-6,-7,-9,-8,-10,-33,-32,-24,]),'ALTER':([0,2,3,4,5,6,7,20,28,54,59,66,78,],[11,11,-3,-4,-5,-6,-7,-9,-8,-10,-33,-32,-24,]),'$end':([1,2,3,4,5,6,7,12,20,28,54,59,66,78,],[0,-2,-3,-4,-5,-6,-7,-1,-9,-8,-10,-33,-32,-24,]),'DATA':([8,],[13,]),'TABLE':([8,11,],[14,17,]),'ID':([9,14,16,17,18,24,25,34,35,42,44,51,67,],[15,19,21,22,23,29,32,45,46,29,57,62,74,]),'INTO':([10,],[16,]),'BASE':([13,],[18,]),'SEMICOLON':([15,23,37,38,40,41,46,58,68,75,],[20,28,-14,-15,-17,54,59,66,-16,78,]),'LPAREN':([19,21,39,56,62,],[24,25,53,65,67,]),'ADD':([22,],[26,]),'DROP':([22,],[27,]),'COLUMN':([26,27,],[34,35,]),'INT':([29,45,],[37,37,]),'DATE':([29,45,],[38,38,]),'NVARCHAR':([29,45,],[39,39,]),'DECIMAL':([29,45,],[40,40,]),'RPAREN':([30,31,32,33,36,37,38,40,47,48,49,55,57,60,61,63,64,68,69,70,71,72,73,74,77,79,],[41,-12,-26,43,-34,-14,-15,-17,-13,-19,-20,-11,-25,-18,-21,-23,68,-16,75,-28,-29,-30,-31,77,-22,-27,]),'COMMA':([30,31,32,33,36,37,38,40,47,48,49,55,57,60,61,63,68,69,70,71,72,73,77,79,],[42,-12,-26,44,-34,-14,-15,-17,-13,-19,-20,-11,-25,-18,-21,-23,-16,76,-28,-29,-30,-31,-22,-27,]),'PRIMARY':([36,37,38,40,47,48,49,60,61,63,68,77,],[50,-14,-15,-17,50,-19,-20,-18,-21,-23,-16,-22,]),'REFERENCE':([36,37,38,40,47,48,49,60,61,63,68,77,],[51,-14,-15,-17,51,-19,-20,-18,-21,-23,-16,-22,]),'NOT':([36,37,38,40,47,48,49,60,61,63,68,77,],[52,-14,-15,-17,52,-19,-20,-18,-21,-23,-16,-22,]),'VALUES':([43,],[56,]),'KEY':([50,],[61,]),'NULL':([52,],[63,]),'NUMBER':([53,65,76,],[64,71,71,]),'DECIMALES':([65,76,],[72,72,]),'STRING':([65,76,],[73,73,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,2,],[1,12,]),'statement':([0,2,],[2,2,]),'create_database':([0,2,],[3,3,]),'use_database':([0,2,],[4,4,]),'create_table':([0,2,],[5,5,]),'insert_into':([0,2,],[6,6,]),'alter_table':([0,2,],[7,7,]),'columns':([24,],[30,]),'column':([24,42,],[31,55,]),'ids':([25,],[33,]),'type':([29,45,],[36,58,]),'attributes':([36,],[47,]),'attribute':([36,47,],[48,60,]),'empty':([36,],[49,]),'primitives':([65,],[69,]),'primitive':([65,76,],[70,79,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> statement init','init',2,'p_init','parser.py',12),
  ('init -> statement','init',1,'p_init','parser.py',13),
  ('statement -> create_database','statement',1,'p_statement','parser.py',18),
  ('statement -> use_database','statement',1,'p_statement','parser.py',19),
  ('statement -> create_table','statement',1,'p_statement','parser.py',20),
  ('statement -> insert_into','statement',1,'p_statement','parser.py',21),
  ('statement -> alter_table','statement',1,'p_statement','parser.py',22),
  ('create_database -> CREATE DATA BASE ID SEMICOLON','create_database',5,'p_create_database','parser.py',28),
  ('use_database -> USE ID SEMICOLON','use_database',3,'p_use_database','parser.py',40),
  ('create_table -> CREATE TABLE ID LPAREN columns RPAREN SEMICOLON','create_table',7,'p_create_table','parser.py',52),
  ('columns -> columns COMMA column','columns',3,'p_columns','parser.py',64),
  ('columns -> column','columns',1,'p_columns','parser.py',65),
  ('column -> ID type attributes','column',3,'p_column','parser.py',75),
  ('type -> INT','type',1,'p_type','parser.py',95),
  ('type -> DATE','type',1,'p_type','parser.py',96),
  ('type -> NVARCHAR LPAREN NUMBER RPAREN','type',4,'p_type','parser.py',97),
  ('type -> DECIMAL','type',1,'p_type','parser.py',98),
  ('attributes -> attributes attribute','attributes',2,'p_attributes','parser.py',111),
  ('attributes -> attribute','attributes',1,'p_attributes','parser.py',112),
  ('attributes -> empty','attributes',1,'p_attributes','parser.py',113),
  ('attribute -> PRIMARY KEY','attribute',2,'p_attribute','parser.py',136),
  ('attribute -> REFERENCE ID LPAREN ID RPAREN','attribute',5,'p_attribute','parser.py',137),
  ('attribute -> NOT NULL','attribute',2,'p_attribute','parser.py',138),
  ('insert_into -> INSERT INTO ID LPAREN ids RPAREN VALUES LPAREN primitives RPAREN SEMICOLON','insert_into',11,'p_insert_into','parser.py',149),
  ('ids -> ids COMMA ID','ids',3,'p_ids','parser.py',162),
  ('ids -> ID','ids',1,'p_ids','parser.py',163),
  ('primitives -> primitives COMMA primitive','primitives',3,'p_primitives','parser.py',171),
  ('primitives -> primitive','primitives',1,'p_primitives','parser.py',172),
  ('primitive -> NUMBER','primitive',1,'p_primitive','parser.py',180),
  ('primitive -> DECIMALES','primitive',1,'p_primitive','parser.py',181),
  ('primitive -> STRING','primitive',1,'p_primitive','parser.py',182),
  ('alter_table -> ALTER TABLE ID ADD COLUMN ID type SEMICOLON','alter_table',8,'p_alter_table','parser.py',189),
  ('alter_table -> ALTER TABLE ID DROP COLUMN ID SEMICOLON','alter_table',7,'p_alter_table','parser.py',190),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',207),
]
